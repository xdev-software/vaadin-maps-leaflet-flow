name: Check Build

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'
  pull_request:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'

env:
  DEMO_MAVEN_MODULE: flow-demo

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        java: [17, 21]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v5
      
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'
    
    - name: Cache Vaadin prod bundles
      uses: actions/cache@v4
      with:
        path: |
          **/bundles/prod.bundle
        key: ${{ runner.os }}-vaadin-prod-bundles-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-vaadin-prod-bundles-
      
    - name: Build with Maven
      run: ./mvnw -B clean package -Pproduction
      
    - name: Check for uncommited changes
      run: |
        if [[ "$(git status --porcelain)" != "" ]]; then
          echo ----------------------------------------
          echo git status
          echo ----------------------------------------
          git status
          echo ----------------------------------------
          echo git diff
          echo ----------------------------------------
          git diff
          echo ----------------------------------------
          echo Troubleshooting
          echo ----------------------------------------
          echo "::error::Unstaged changes detected. Locally try running: git clean -ffdx && ./mvnw -B clean package -Pproduction"
          exit 1
        fi

    - name: Upload demo files
      uses: actions/upload-artifact@v4
      with:
        name: demo-files-java-${{ matrix.java }}
        path: ${{ env.DEMO_MAVEN_MODULE }}/target/${{ env.DEMO_MAVEN_MODULE }}.jar
        if-no-files-found: error

  checkstyle:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || !startsWith(github.head_ref, 'renovate/') }}
    timeout-minutes: 15

    strategy:
      matrix:
        java: [17]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v5
      
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Run Checkstyle
      run: ./mvnw -B checkstyle:check -P checkstyle -T2C

  pmd:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || !startsWith(github.head_ref, 'renovate/') }}
    timeout-minutes: 15

    strategy:
      matrix:
        java: [17]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v5

    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Run PMD
      run: ./mvnw -B test pmd:aggregate-pmd-no-fork pmd:check -P pmd -DskipTests -T2C

    - name: Run CPD (Copy Paste Detector)
      run: ./mvnw -B pmd:aggregate-cpd pmd:cpd-check -P pmd -DskipTests -T2C

    - name: Upload report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pmd-report
        if-no-files-found: ignore
        path: |
          target/reports/**
